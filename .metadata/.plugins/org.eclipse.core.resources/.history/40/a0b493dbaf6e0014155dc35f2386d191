package com.guntzergames.medievalwipeout.managers;

import java.util.ArrayList;
import java.util.List;

import javax.ejb.EJB;
import javax.ejb.Stateless;

import com.guntzergames.medievalwipeout.beans.Account;
import com.guntzergames.medievalwipeout.beans.Player;
import com.guntzergames.medievalwipeout.beans.PlayerDeckCard;
import com.guntzergames.medievalwipeout.beans.PlayerDeckTemplate;
import com.guntzergames.medievalwipeout.enums.CardModel;
import com.guntzergames.medievalwipeout.persistence.AccountDao;
import com.guntzergames.medievalwipeout.singletons.BotAccountSingleton;

@Stateless
public class AccountManager {
	
	@EJB
	private BotAccountSingleton botAccountSingleton;
	
	@EJB
	private AccountDao accountDao;
	
	public Account getAccount(String facebookUserId, boolean botAccount) {
		
		Account account = null;
		if ( !botAccount ) {
			account = accountDao.findByFacebookUserId(facebookUserId);
		}
		
		if ( account == null ) {
			account = new Account();
			account.setFacebookUserId(facebookUserId);
			account.setBotAccount(botAccount);
			accountDao.addAccount(account);
		}
		
		System.out.println("Account: " + account);
		System.out.println("Templates: " + account.getDeckTemplates());
		
		PlayerDeckTemplate deckTemplate = null;
		
		if ( account.isBotAccount() ) {
			deckTemplate = new PlayerDeckTemplate();
			deckTemplate.setCards(new ArrayList<PlayerDeckCard>());
		}
		
		PlayerDeckTemplate deckTemplate = account.isBotAccount() ? new PlayerDeckTemplate() : account.getDeckTemplates().get(0);
		List<PlayerDeckCard> cards = deckTemplate.getCards();
		cards.add(new PlayerDeckCard(CardModel.GOBLIN_PIRAT));
		cards.add(new PlayerDeckCard(CardModel.TEMPLAR));
		cards.add(new PlayerDeckCard(CardModel.ASTRAL_SPIDER));
		cards.add(new PlayerDeckCard(CardModel.GNOME_ENGINEER));
		cards.add(new PlayerDeckCard(CardModel.GOBLIN_PIRAT));
		cards.add(new PlayerDeckCard(CardModel.GOBLIN_PIRAT));
		cards.add(new PlayerDeckCard(CardModel.GNOME_ENGINEER));
		cards.add(new PlayerDeckCard(CardModel.TEMPLAR));
		cards.add(new PlayerDeckCard(CardModel.ASTRAL_SPIDER));
		cards.add(new PlayerDeckCard(CardModel.ASTRAL_SPIDER));
		List<PlayerDeckTemplate> deckTemplates = new ArrayList<PlayerDeckTemplate>();
		deckTemplates.add(deckTemplate);
		account.setDeckTemplates(deckTemplates);
		
		return account;
	}
	
	public Player getBotPlayer(long i) {
		return botAccountSingleton.getBotPlayer(i);
	}

}
