package com.guntzergames.medievalwipeout.beans;

import java.util.List;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.codehaus.jackson.annotate.JsonIgnore;

@Entity
@Table(name = "DECK_TEMPLATE")
@NamedQueries({ @NamedQuery(name = PlayerDeckTemplate.NQ_FIND_BY_FACEBOOK_USER_ID, query = "SELECT d FROM PlayerDeckTemplate d WHERE a.account = :account") })
public class PlayerDeckTemplate {
	
	public static final String NQ_FIND_BY_FACEBOOK_USER_ID = "NQ_FIND_DECK_TEMPLATES_BY_ACCOUNT"; 
	
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Basic(optional = false)
	@Column(name = "ID")
	private long id;
	
	@JsonIgnore
	@ManyToOne(targetEntity = Account.class)
	@JoinColumn(name = "ACCOUNT_KEY")
	private Account account;
	
	@Column(name = "DECK_LIBEL")
	private String deckLibel;

	@OneToMany(mappedBy = "deckTemplate", fetch = FetchType.EAGER)
	private List<PlayerDeckCard> cards;
	
	public long getId() {
		return id;
	}

	public void setId(long id) {
		this.id = id;
	}

	public String getDeckLibel() {
		return deckLibel;
	}

	public void setDeckLibel(String deckLibel) {
		this.deckLibel = deckLibel;
	}

	public PlayerDeckTemplate() {
		
	}

	public List<PlayerDeckCard> getCards() {
		return cards;
	}

	public void setCards(List<PlayerDeckCard> cards) {
		this.cards = cards;
	}
	
	public PlayerDeck toDeck() {
		PlayerDeck deck = new PlayerDeck();
		deck.setCards(cards);
		return deck;
	}

	public Account getAccount() {
		return account;
	}

	public void setAccount(Account account) {
		this.account = account;
	}
	
}
